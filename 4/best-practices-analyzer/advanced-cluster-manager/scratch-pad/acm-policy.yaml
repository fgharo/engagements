apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-pods-musthave-liveness-probes
  namespace: default
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  remediationAction: inform
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-pods-musthave-liveness-probes-example
        spec:
          remediationAction: inform # the policy-template spec.remediationAction is overridden by the preceding parameter value for spec.remediationAction.
          severity: low
          namespaceSelector:
            exclude: ["kube-*", "openshift-*", "clo-*"]
            include: ["default"]
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Pod 
                spec:
                  containers:
                  - name: httpd
                    image: 'image-registry.openshift-image-registry.svc:5000/openshift/httpd:latest'
                    livenessProbe:
                      tcpSocket: 
                        port: "8080"
                      initialDelaySeconds: 15
                      timeoutSeconds: 1
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-pods-musthave-liveness-probes
  namespace: default
placementRef:
  name: placement-policy-pods-musthave-liveness-probes
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-pods-musthave-liveness-probes
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-pods-musthave-liveness-probes
  namespace: default
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: name
        operator: In
        values:
          - managed-cluster
