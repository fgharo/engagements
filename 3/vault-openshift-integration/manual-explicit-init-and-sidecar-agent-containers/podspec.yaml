apiVersion: v1
kind: Pod
metadata:
  name: vault-agent-example
  labels:
    app: vault-agent-example
spec:
  serviceAccountName: vault-auth
  volumes:
    - configMap:
        items:
          - key: vault-agent-config.hcl
            path: vault-agent-config.hcl
        name: example-vault-agent-config
      name: config
    - emptyDir: {}
      name: shared-data

  initContainers:
    # Init container to make sure the auth token and secrets up to date before the main container consumes the secrets.
    # If we only have the sidecar could be a race condition, where the app consumes secrets that are not there yet and crashes if
    # it needs those secrets for startup.
    - image: quay.io/user15/vault:latest
      name: vault-agent-init
      args:
        - agent
        - -config=/etc/vault/vault-agent-config.hcl
        - -log-level=debug
        - -exit-after-auth
      env:
        - name: VAULT_ADDR
          value: "http://192.168.1.100:8200"
        - name: SKIP_SETCAP
          value: 'true'
      volumeMounts:
        - mountPath: /etc/vault
          name: config
        - mountPath: /etc/secrets
          name: shared-data

  containers:
    # Sidecar container to either reauthenticate or refresh/rerender secrets every 5 minutes
    # https://www.vaultproject.io/docs/agent/template#renewals-and-updating-secrets
    - image: quay.io/user15/vault:latest
      name: vault-agent-sidecar
      args:
        - agent
        - -config=/etc/vault/vault-agent-config.hcl
        - -log-level=debug
      env:
        - name: VAULT_ADDR
          value: "http://192.168.1.100:8200"
        - name: SKIP_SETCAP
          value: 'true'      
      volumeMounts:
        - mountPath: /etc/vault
          name: config
        - mountPath: /etc/secrets
          name: shared-data
      lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - sleep 5 && kill -SIGTERM $(pidof vault)

    # Main Application Container.
    - image: nginx
      name: nginx-container
      ports:
        - containerPort: 80
      volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared-data
